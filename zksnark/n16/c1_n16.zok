import "ecc/edwardsScalarMult" as scalarMult;
import "ecc/edwardsAdd" as add;
import "utils/pack/bool/nonStrictUnpack256" as unpack256bool;
from "ecc/babyjubjubParams" import BabyJubJubParams;
import "ecc/babyjubjubParams" as context;
import "hashes/poseidon/poseidon" as poseidon;

def main(private field x) -> field[2][2] {
  BabyJubJubParams context = context();
  field[2] G = [context.Gu, context.Gv];

  field [8][2] P = [
    [13522923618312071650302635321243604285850047309527197690046697525217605329069,10932479589697132144784969532699395534930855291504911162904822788453670442360], 
    [8114648683678704144160373335568649650033887919835121743889293380417032819048,656854882584790177677729777925139592743926058718260747964140015719296150373], 
    [8041613747207015951652469932410251687395045749506408379408649945823434186008,12428011484007481797110341238074166855271849601553355310921443451952904022044], 
    [14013519439908198872993428785218173227282766975638574393768474101967215695707,17845049008754978913629757984435994481151160292994615504430998303593900334408], 
    [1402373490401517435430617803705905887485416771124198962153878070450451068870,9017471604939841597771391014381989639499247297991510365667057222982451512737], 
    [3233258710148519653678468997312483566033225244473513302514665889236078840919,492251951977314165678115188025638221648164898529444060321827346693474619710], 
    [6122099670931574288771415108927499867587012211568789780844915301941028823095,21178637537128131405476429673929303069094383313059862572738011529714572917631], 
    [12622440090255384237255013442242705733784451139526153129418517795070995074850,4194712060082230815603589382688226154389044142310230526630529105176762537692]
  ];
  
  bool[256] xbit1 = unpack256bool(x);
  bool[256] xbit2 = unpack256bool(x**2);
  bool[256] xbit3 = unpack256bool(x**3);
  bool[256] xbit4 = unpack256bool(x**4);
  bool[256] xbit5 = unpack256bool(x**5);
  bool[256] xbit6 = unpack256bool(x**6);
  bool[256] xbit7 = unpack256bool(x**7);
  bool[256] xbit8 = unpack256bool(x**8);

  field[2] gx1 = scalarMult(xbit1, P[0], context);
  field[2] gx2 = scalarMult(xbit2, P[1], context);
  field[2] gx3 = scalarMult(xbit3, P[2], context);
  field[2] gx4 = scalarMult(xbit4, P[3], context);
  field[2] gx5 = scalarMult(xbit5, P[4], context);
  field[2] gx6 = scalarMult(xbit6, P[5], context);
  field[2] gx7 = scalarMult(xbit7, P[6], context);
  field[2] gx8 = scalarMult(xbit8, P[7], context);

  
  field[2] mut z = [0,1];

  field[8][2] gx = [gx1,gx2,gx3,gx4,gx5,gx6,gx7,gx8];
  for u32 i in 0..8{
    z = add(z, gx[i], context);
  }
  field[2] c = scalarMult(xbit1, G, context);
  return [z,c];
}
