import "ecc/edwardsScalarMult" as scalarMult;
import "ecc/edwardsAdd" as add;
import "utils/pack/bool/nonStrictUnpack256" as unpack256bool;
from "ecc/babyjubjubParams" import BabyJubJubParams;
import "ecc/babyjubjubParams" as context;
import "hashes/poseidon/poseidon" as poseidon;

def main(private field x) -> field[2][2]{
  BabyJubJubParams context = context();
  field[2] G = [context.Gu, context.Gv];

  field [16][2] P = [
    [13522923618312071650302635321243604285850047309527197690046697525217605329069,10932479589697132144784969532699395534930855291504911162904822788453670442360], 
    [8114648683678704144160373335568649650033887919835121743889293380417032819048,656854882584790177677729777925139592743926058718260747964140015719296150373], 
    [8041613747207015951652469932410251687395045749506408379408649945823434186008,12428011484007481797110341238074166855271849601553355310921443451952904022044], 
    [14013519439908198872993428785218173227282766975638574393768474101967215695707,17845049008754978913629757984435994481151160292994615504430998303593900334408], 
    [1402373490401517435430617803705905887485416771124198962153878070450451068870,9017471604939841597771391014381989639499247297991510365667057222982451512737], 
    [3233258710148519653678468997312483566033225244473513302514665889236078840919,492251951977314165678115188025638221648164898529444060321827346693474619710], 
    [6122099670931574288771415108927499867587012211568789780844915301941028823095,21178637537128131405476429673929303069094383313059862572738011529714572917631], 
    [12622440090255384237255013442242705733784451139526153129418517795070995074850,4194712060082230815603589382688226154389044142310230526630529105176762537692], 
    [2722608305005439479193990758048802438123188513020400267422805672440133917500,15797363996002005356886757592663245252565154273497467727132039112023347580096], 
    [9062808671582827613170692309178448901390449318552658593716865644949625871071,21676735312726643795684791526947223355369715898499582680107431404847922535680], 
    [1353660565437383045760952703662832908457590650261304563954355636395067904007,8883168637095109675657770065085448739490641966588658812092540185427533250826], 
    [13758196100427828173210969285302995392820131265798778894799600827081656263537,12497620618324140130152953503196676337772564983266980553264277334376343388022], 
    [13669428520811512903250761165677071113396705745204198179555180668628784030839,9326261991540610826357803349045949017484282200029688908609878980249522292602], 
    [16663798398752345278318950390617648403214356720351196511356367038833957137258,4159747059060700537436978311750815638959560390953033270101886351971382000352], 
    [18895158218800023507902499576788671807111315959496670964390898066885479414807,20382481936658486378390908399421388443911545843541108003114629498024888851169],
    [9286177236154143424133648908780606582159442091616421449129620991015411136673,14339354332021542387579399802787831930789109771730853004872677972098680915785]
  ];
  
  bool[256] xbit1 = unpack256bool(x);
  bool[256] xbit2 = unpack256bool(x**2);
  bool[256] xbit3 = unpack256bool(x**3);
  bool[256] xbit4 = unpack256bool(x**4);
  bool[256] xbit5 = unpack256bool(x**5);
  bool[256] xbit6 = unpack256bool(x**6);
  bool[256] xbit7 = unpack256bool(x**7);
  bool[256] xbit8 = unpack256bool(x**8);
  bool[256] xbit9 = unpack256bool(x**9);
  bool[256] xbit10 = unpack256bool(x**10);

  bool[256] xbit11 = unpack256bool(x*11);
  bool[256] xbit12 = unpack256bool(x**12);
  bool[256] xbit13 = unpack256bool(x**13);
  bool[256] xbit14 = unpack256bool(x**14);
  bool[256] xbit15 = unpack256bool(x**15);
  bool[256] xbit16 = unpack256bool(x**16);

  field[2] gx1 = scalarMult(xbit1, P[0], context);
  field[2] gx2 = scalarMult(xbit2, P[1], context);
  field[2] gx3 = scalarMult(xbit3, P[2], context);
  field[2] gx4 = scalarMult(xbit4, P[3], context);
  field[2] gx5 = scalarMult(xbit5, P[4], context);
  field[2] gx6 = scalarMult(xbit6, P[5], context);
  field[2] gx7 = scalarMult(xbit7, P[6], context);
  field[2] gx8 = scalarMult(xbit8, P[7], context);
  field[2] gx9 = scalarMult(xbit9, P[8], context);
  field[2] gx10 = scalarMult(xbit10, P[9], context);

  field[2] gx11 = scalarMult(xbit11, P[10], context);
  field[2] gx12 = scalarMult(xbit12, P[11], context);
  field[2] gx13 = scalarMult(xbit13, P[12], context);
  field[2] gx14 = scalarMult(xbit14, P[13], context);
  field[2] gx15 = scalarMult(xbit15, P[14], context);
  field[2] gx16 = scalarMult(xbit16, P[15], context);

  field[2] mut z = [0,1];

  field[17][2] gx = [gx1,gx2,gx3,gx4,gx5,gx6,gx7,gx8,gx9,gx10,\
                     gx11,gx12,gx13,gx14,gx15,gx16, G];
  for u32 i in 0..17{
    z = add(z, gx[i], context);
  }
  field[2] c = scalarMult(xbit1, G, context);
  return [z,c];
}
